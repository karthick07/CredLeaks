{
    "scrape_url": "https://scrape.pastebin.com/api_scrape_item.php?i=g5Lx9GA2",
    "full_url": "https://pastebin.com/g5Lx9GA2",
    "date": "1594551018",
    "key": "g5Lx9GA2",
    "size": 3685,
    "expire": "1594551618",
    "title": "",
    "syntax": "cpp",
    "user": "",
    "filename": "g5Lx9GA2",
    "pasteid": "g5Lx9GA2",
    "pastesite": "pastebin.com",
    "@timestamp": "2020-07-12T10:50:18",
    "MD5": "2bb6dcbbf3f61385719e9240a6caee5f",
    "SHA256": "64ec44a77b88ab8dcce1c43960655cbcec41f72ef82d3693552566b5a38d3a6b",
    "raw_paste": "//============================================================================\r\n// Name        : FirstTeamContestVSC2020.cpp\r\n// Author      : Kashtanov S.\r\n// Version     : Initial Commit\r\n// Copyright   : Your copyright notice\r\n// Description : Hello World in C++, Ansi-style\r\n//============================================================================\r\n\r\n#include <iostream>\r\n#include <ostream>\r\n#include <istream>\r\n#include <string>\r\n#include <map>\r\n#include <vector>\r\n#include <utility>\r\n#include <algorithm>\r\n#include <set>\r\n#include <deque>\r\n#include <queue>\r\n#include <tuple>\r\n#include <stack>\r\n#include <cmath>\r\n#include <memory>\r\n#include <iomanip>\r\n#include <list>\r\n#include <forward_list>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <numeric>\r\n#include <iterator>\r\n#include <future>\r\n#include <mutex>\r\n#include <cstdint>\r\n#include <array>\r\n#include <bitset>\r\n// #include \"test_runner.h\"\r\n\r\nusing namespace std;\r\n\r\n#define loop(n) for (size_t i = 0; i < (n); ++i)\r\n#define loop_(start, stop) for (size_t i = (start); i < (stop); ++i)\r\n#define loop__(start, stop, step) for (size_t i = (start); i < (stop); i += (step))\r\n#define all(v) begin(v), end(v)\r\n#define reverse_all(v) rbegin(v), rend(v)\r\n#define pb(x) push_back(x)\r\n#define mp(x, y) make_pair(x, y)\r\n#define max(x, y) (x) < (y) ? (y) : (x)\r\n#define abs(x) (x) < 0 ? ()-x) : (x)\r\n#define ul unsigned long int\r\n#define ull unsigned long long int\r\n#define ll long long int\r\n#define bs(v, elem) binary_search(all(v), elem)\r\ntypedef vector<int> vi;\r\ntypedef vector<vector<int>> vii;\r\ntypedef pair<int, int> pii;\r\n#define DEBUG(var) cerr << #var << \" = \" << var << endl;\r\n#define IN_RANGE(x, left, right) ((x) >= (left) && (x) <= (right))\r\n#define getI(x) scanf(\"%d\", &x)\r\n#define getII(x, y) scanf(\"%d%d\", &x, &y)\r\n#define getIII(x, y, z) scanf(\"%d%d%d\", &x, &y, &z)\r\n\r\ntemplate <typename T>\r\nostream& operator<< (ostream& out, const vector<T>& v) {\r\n\tsize_t size = v.size();\r\n\tloop(size) {\r\n\t\tout << v[i] << \" \";\r\n\t}\r\n\tout << endl;\r\n\treturn out;\r\n}\r\n/*\r\ntemplate <typename First, typename Second>\r\nostream& operator>> (ostream& out, const pair<First, Second>& p) {\r\n\tout << '(' << p.first << ',' << p.second << ')' << endl;\r\n\treturn out;\r\n}\r\n\r\ntemplate <typename Iterator>\r\nclass IteratorRange {\r\nprivate:\r\n\tIterator _begin, _end;\r\npublic:\r\n\tIteratorRange(Iterator begin, Iterator end) : _begin(begin), _end(end) { }\r\n\r\n\tIterator begin() const { return _begin; }\r\n\tIterator end()   const { return _end; }\r\n};*/\r\n\r\nconst uint32_t SIZE = 15504;\r\n\r\n#define LOOP(name) for(int name = 0; name < 16; name++)\r\n\r\nint main() {\r\n\tuint32_t iter = 0;\r\n\tunordered_map<uint32_t, string> number_to_code;\r\n\tunordered_map<string, uint32_t> code_to_number;\r\n\r\n\tLOOP(i1) {\r\n\t\tuint32_t sum = 0;\r\n\t\tLOOP(i2) {\r\n\t\t\tLOOP(i3) {\r\n\t\t\t\tLOOP(i4) {\r\n\t\t\t\t\tLOOP(i5) {\r\n\t\t\t\t\t\tLOOP(i6) {\r\n\t\t\t\t\t\t\tsum = i1 + i2 + i3 +i4 + i5 + i6;\r\n\t\t\t\t\t\t\tif (sum != 15u)\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tostringstream ss;\r\n\t\t\t\t\t\t\t\tss << i1 << \" \" << i2 << \" \" << i3 << \" \" << i4 << \" \" << i5 << \" \" << i6;\r\n//\t\t\t\t\t\t\t\tif (iter < 30)\r\n//\t\t\t\t\t\t\t\t\tcout << \"====== \" << ss.str() << \" =====\\n\";\r\n\t\t\t\t\t\t\t\tconst string s = ss.str();\r\n\t\t\t\t\t\t\t\tnumber_to_code[iter] = s;\r\n\t\t\t\t\t\t\t\tcode_to_number[s] = iter;\r\n\t\t\t\t\t\t\t\t++iter;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tchar request;\r\n\tcin >> request;\r\n\r\n\twhile(request != 'e') {\r\n\t\tif (request == 'm') {\r\n\t\t\tostringstream ss;\r\n\t\t\tloop(6) {\r\n\t\t\t\tuint32_t n;\r\n\t\t\t\tcin >> n;\r\n\t\t\t\tss << n;\r\n\t\t\t\tif (i != 5)\r\n\t\t\t\t\tss << \" \";\r\n\t\t\t}\r\n\t\t\tcout << code_to_number[ss.str()];\r\n\t\t} else {\r\n\t\t\tuint32_t iter;\r\n\t\t\tcin >> iter;\r\n\t\t\tcout << number_to_code[iter];\r\n\t\t}\r\n\t\tcout << '\\n';\r\n\t\tcin >> request;\r\n\t}\r\n}",
    "YaraRule": [
        "enable_org23",
        "core_keywords"
    ]
}