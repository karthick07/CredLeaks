{
    "scrape_url": "https://scrape.pastebin.com/api_scrape_item.php?i=6XegP0nx",
    "full_url": "https://pastebin.com/6XegP0nx",
    "date": "1594630380",
    "key": "6XegP0nx",
    "size": 2801,
    "expire": "1594633980",
    "title": "\u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b",
    "syntax": "python",
    "user": "kostyukevich",
    "filename": "6XegP0nx",
    "pasteid": "6XegP0nx",
    "pastesite": "pastebin.com",
    "@timestamp": "2020-07-13T08:53:00",
    "MD5": "fcbbc4d061eb272ccc86968c152a2c8d",
    "SHA256": "979230aa0264a701975612de915449461a9c0c05b616e29b53d6069c3da2f405",
    "raw_paste": "from vk_api import VkApi, VkUpload\r\nfrom vk_api.longpoll import VkLongPoll, VkEventType\r\nimport requests\r\nfrom random import randint\r\nfrom bs4 import BeautifulSoup\r\n\r\nVK_TOKEN = 'a47436d8894f49e81a488838f5ad9d9e56718655410b974ded4d48739f1ac128e19e12209fd8fd1e47b9f'\r\nAPI_KEY = 'e769f0fe046f901526994f29b5bc6f8e'\r\nWEATHER_URL = 'https://api.openweathermap.org/data/2.5/weather'\r\nvk_session = VkApi(token=VK_TOKEN)\r\nlongpoll = VkLongPoll(vk_session)\r\nupload = VkUpload(vk_session)\r\n\r\ndef lev_distance(a, b): #Calculates the Levenshtein distance between a and b\r\n\tn, m = len(a), len(b)\r\n\tif n > m:\r\n\t\t# Make sure n <= m, to use O(min(n, m)) space\r\n\t\ta, b = b, a\r\n\t\tn, m = m, n\r\n\r\n\tcurrent_row = range(n + 1)  # Keep current and previous row, not entire matrix\r\n\tfor i in range(1, m + 1):\r\n\t\tprevious_row, current_row = current_row, [i] + [0] * n\r\n\t\tfor j in range(1, n + 1):\r\n\t\t\tadd, delete, change = previous_row[j] + 1, current_row[j - 1] + 1, previous_row[j - 1]\r\n\t\t\tif a[j - 1] != b[i - 1]:\r\n\t\t\t\tchange += 1\r\n\t\t\tcurrent_row[j] = min(add, delete, change)\r\n\r\n\treturn current_row[n]\r\n\r\ndef check_word_matching(word, keys, maxL = 2): # checking words matching by Levenshtein distance\r\n\tfor key in keys:\r\n\t\tif lev_distance(word, key) <= maxL:\r\n\t\t\treturn True\r\n\r\n\treturn False\r\n\r\ndef get_user_name(user_id): # https://vk.com/dev/users.get\r\n\tr = vk_session.method('users.get', {'v':'5.71', 'access_token' : VK_TOKEN, 'user_ids' : user_id})\r\n\treturn r[0]['first_name']\r\n\r\ndef get_current_temperature(town): # \u0432\u044b\u0442\u0430\u0441\u043a\u0438\u0432\u0430\u0435\u043c \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0443 \u0433\u043e\u0440\u043e\u0434\u0430 \u0441 \u0441\u0430\u0439\u0442\u0430, \u0435\u0441\u043b\u0438 404, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443, \u0447\u0442\u043e \u0433\u043e\u0440\u043e\u0434\u0430 \u043d\u0435\u0442\r\n\tparams = {'q':town, 'appid':API_KEY, 'units':'metric', 'mode':'json'}\r\n\tr = requests.get(WEATHER_URL, params)\r\n\tif r.status_code == 404:\r\n\t\treturn '\u0422\u0430\u043a\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442'\r\n\tdata = r.json()\r\n\treturn data['main']['temp']\r\n\r\ndef extract_image_url(town): # \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443 (\u0433\u043e\u0440\u043e\u0434\u0430) \u0438\u0437 \u0432\u0438\u043a\u0438\u043f\u0435\u0434\u0438\u0438\r\n\turl = 'https://ru.wikipedia.org/wiki/'\r\n\tr = requests.get(url + town)\r\n\tsoup = BeautifulSoup(r.text, 'lxml')\r\n\tbody = soup.find(id='bodyContent')\r\n\timg = body.find('img')\r\n\tpath = 'https:' + img['src']\r\n\treturn path\r\n\r\ndef get_image(url):\r\n\timage_url = extract_image_url(url)\r\n\timage = requests.get(image_url, stream=True)\r\n\tphoto = upload.photo_messages(photos=image.raw)[0]\r\n\tattachments = []\r\n\tattachments.append('photo{}_{}'.format(photo['owner_id'], photo['id']))\r\n\r\n\treturn attachments;\r\n\r\ndef send_msg(user_id, text, attachments = ''):  # https://vk.com/dev/messages.send\r\n\tvk_session.method('messages.send', {\r\n\t\t'user_id': user_id, \r\n\t\t'message': text,\r\n\t\t'attachment':','.join(attachments),\r\n\t\t'random_id':randint(1e16, 1e18)\r\n\t})\r\n\r\ndef send_image_by_url(user_id, url): # \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435, \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 extract_image_url\r\n\tsend_msg(user_id, '', get_image(url))",
    "YaraRule": [
        "generic_api"
    ]
}