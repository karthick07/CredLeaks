{
    "scrape_url": "https://scrape.pastebin.com/api_scrape_item.php?i=H3Hc2n56",
    "full_url": "https://pastebin.com/H3Hc2n56",
    "date": "1594630177",
    "key": "H3Hc2n56",
    "size": 3016,
    "expire": "1594633777",
    "title": "MAIN",
    "syntax": "pys60",
    "user": "kostyukevich",
    "filename": "H3Hc2n56",
    "pasteid": "H3Hc2n56",
    "pastesite": "pastebin.com",
    "@timestamp": "2020-07-13T08:49:37",
    "MD5": "b371e1c2a942b57a128454db7532ef1a",
    "SHA256": "f701cd640785811eef8a0bedd5c1f4785fca3c0f4a3697caf26a58340e77bb6f",
    "raw_paste": "from vk_api import VkApi, VkUpload\r\nfrom vk_api.longpoll import VkLongPoll, VkEventType\r\nfrom random import randint\r\nfrom bs4 import BeautifulSoup\r\nimport requests\r\nfrom defs.home_1 import *\r\nfrom defs.weather import *\r\nfrom defs.physics import *\r\nfrom defs.literature import *\r\nfrom defs.geometry import *\r\nfrom defs.physics_2 import *\r\nfrom defs.terms import *\r\nfrom defs.memorize_terms import *\r\nfrom defs.self_test_div import *\r\nfrom defs.self_test_1 import *\r\nfrom defs.self_test_2 import *\r\nfrom defs.answer_self_test_1 import *\r\nfrom defs.answer_self_test_2 import *\r\nVK_TOKEN = 'a47436d8894f49e81a488838f5ad9d9e56718655410b974ded4d48739f1ac128e19e12209fd8fd1e47b9f'\r\nAPI_KEY = 'e769f0fe046f901526994f29b5bc6f8e'\r\nWEATHER_URL = 'https://api.openweathermap.org/data/2.5/weather'\r\nvk_session = VkApi(token=VK_TOKEN)\r\nlongpoll = VkLongPoll(vk_session)\r\nupload = VkUpload(vk_session)\r\nuserStates = {}\r\ncourse = {}\r\nterm = {}\r\ndefinition = {}\r\nread_write = {}\r\n\r\n\r\nfor event in longpoll.listen(): #\u0441\u043b\u0443\u0448\u0430\u0435\u043c \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0430\r\n    if event.type == VkEventType.MESSAGE_NEW and event.to_me:\r\n\r\n        if not (event.user_id in userStates):\r\n            userStates[event.user_id] = ['home', 'home']\r\n            read_write[event.user_id] = 0 #0 - \u0431\u043e\u0442 \u043f\u0438\u0448\u0435\u0442, 1 - \u0431\u043e\u0442 \u0447\u0438\u0442\u0430\u0435\u0442\r\n\r\n        request = event.text.lower() #\u043f\u0438\u0445\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0438 \u043e\u0442\u0434\u0435\u043b\u044b\u0432\u0430\u0435\u043c\u0441\u044f \u043e\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\r\n\r\n        if userStates[event.user_id][0] == 'home':\r\n            home(event, request, userStates)\r\n        elif userStates[event.user_id][0] == 'weather':\r\n            weather(event, request, userStates)\r\n        elif userStates[event.user_id][0] == 'physics': #\u0434\u0435\u043b\u0438\u043c \u043d\u0430 \u043a\u043b\u0430\u0441\u0441\u044b\r\n            physics(event, request, userStates, course)\r\n        elif userStates[event.user_id][0] == 'geometry':\r\n            geometry(event, request, userStates)\r\n        elif userStates[event.user_id][0] == 'literature':\r\n            literature(event, request, userStates)\r\n        elif userStates[event.user_id][0] == 'physics_2': #\u0434\u0435\u043b\u0438\u043c \u043d\u0430 \u0442\u0435\u0440\u043c\u0438\u043d\u044b \u0438 \u0431\u0438\u043b\u0435\u0442\u044b\r\n            physics_2(event, request, userStates)\r\n        elif userStates[event.user_id][0] == 'terms': #\u0434\u0435\u043b\u0438\u043c \u0442\u0435\u0440\u043c\u0438\u043d\u044b \u043d\u0430 \u0441\u0430\u043c\u043e\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u044c\r\n            terms(event, request, userStates)\r\n        elif userStates[event.user_id][0] == 'memorize_terms':\r\n            memorize_terms(event, request, userStates, course)\r\n        elif userStates[event.user_id][0] == 'self_test_div': #\u0434\u0435\u043b\u0438\u043c \u043d\u0430 \u0440\u0435\u0436\u0438\u043c\u044b \u0441\u0430\u043c\u043e\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\r\n            self_test_div(event, request, userStates)\r\n        elif userStates[event.user_id][0] == 'self_test_1':\r\n            self_test_1(event, request, userStates, course, definition)\r\n        elif userStates[event.user_id][0] == 'self_test_2':\r\n            self_test_2(event, request, userStates, course, term)\r\n        elif userStates[event.user_id][0] == 'answer_self_test_1':\r\n            answer_self_test_1(event, request, userStates, definition)\r\n        elif userStates[event.user_id][0] == 'answer_self_test_2':\r\n            answer_self_test_2(event, request, userStates, term)",
    "YaraRule": [
        "generic_api"
    ]
}