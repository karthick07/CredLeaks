{
    "scrape_url": "https://scrape.pastebin.com/api_scrape_item.php?i=582rwpJr",
    "full_url": "https://pastebin.com/582rwpJr",
    "date": "1594488601",
    "key": "582rwpJr",
    "size": 3979,
    "expire": "0",
    "title": "stripmine.lua",
    "syntax": "lua",
    "user": "",
    "filename": "582rwpJr",
    "pasteid": "582rwpJr",
    "pastesite": "pastebin.com",
    "@timestamp": "2020-07-11T17:30:01",
    "MD5": "5dc4131c4b7c5715d82f5e5680b6d5b3",
    "SHA256": "8aff87957b6fc38060c0a7335a367c41df398b3cf3a66f7881098f2ea54a3710",
    "raw_paste": "do\r\n    print(\"Begin Stripmine\");\r\nend\r\n\r\n-------------------------------------\r\n-- Main loop\r\n\r\n-- Slot configuration\r\nlocal ki_sFuel = 1; \r\nlocal ki_sTorch = 2;\r\n\r\n-- Distance config\r\nlocal ki_torchOffset = 7;\r\nlocal ki_xOffsetMax = 170;\r\n\r\n--------------------------------------\r\n--------------------------------------\r\n\r\n\r\n-- State locals\r\nlocal e_turtleState = 0;\r\nlocal e_turtleStatePrevious = e_turtleState;\r\n-- 0 Mining\r\n-- 1 Returning\r\n-- 2 Awaiting fuel\r\n\r\nlocal e_turtleOrient = 0;\r\n-- Relative to direction when placed\r\n-- 0 Forwards\r\n-- 1 Right\r\n-- 2 Backwards\r\n-- 3 Left\r\n\r\nlocal i_xOffset = 0;\r\nlocal i_xLatestTorch = 0; \r\n\r\n\r\n-- Functions\r\nfunction TurnLeft()\r\n    turtle.turnLeft();\r\n    e_turtleOrient = e_turtleOrient - 1;\r\n    if e_turtleOrient == -1 then\r\n        e_turtleOrient = 3;\r\n    end\r\nend\r\n\r\nfunction TurnRight()\r\n    turtle.turnRight();\r\n    e_turtleOrient = e_turtleOrient + 1\r\n    if e_turtleOrient == 4 then\r\n        e_turtleOrient = 0;\r\n    end\r\nend\r\n\r\nfunction MoveForward(i_xIncrement)\r\n    if turtle.forward() then\r\n        i_xOffset = i_xOffset + i_xIncrement;\r\n    end\r\nend\r\n\r\nfunction MoveBackward(i_xIncrement)\r\n    if turtle.back() then\r\n        i_xOffset = i_xOffset - i_xIncrement;\r\n    end\r\nend\r\n\r\nfunction ChangeTurtleState(newState)\r\n    if e_turtleState == newState then\r\n        return\r\n    end\r\n\r\n    e_turtleStatePrevious = e_turtleState;\r\n    e_turtleState = newState;\r\nend\r\n\r\nfunction ChangeTurtleStatePrevious()\r\n    if e_turtleState == e_turtleStatePrevious then\r\n        error(\"Atempted to change turtle to previous turtle state which is equal to the current turtle state\")\r\n        return;\r\n    end\r\n    e_turtleState = e_turtleStatePrevious;\r\nend\r\n\r\n\r\n-------------------------------------\r\nwhile true do\r\n    -- Refuel\r\n    if turtle.getFuelLevel() == 0 then\r\n        ChangeTurtleState(2);\r\n    end\r\n  \r\n    -- Placing torches\r\n    if e_turtleState ~= 1 and\r\n       i_xOffset ~= i_xLatestTorch and\r\n       (i_xOffset - 1) % ki_torchOffset == 0\r\n       then\r\n        turtle.select(ki_sTorch);\r\n        \r\n        local details = turtle.getItemDetail();\r\n        \r\n        if not details or details.name ~= \"minecraft:torch\" then\r\n            ChangeTurtleState(3);\r\n        else\r\n            MoveBackward(1);\r\n            TurnLeft();\r\n            \r\n            turtle.placeUp();\r\n            \r\n            TurnRight();\r\n            MoveForward(1);\r\n            \r\n            i_xLatestTorch = i_xOffset;\r\n            \r\n            if e_turtleState == 3 then\r\n                ChangeTurtleStatePrevious();\r\n            end\r\n        end        \r\n    end\r\n                            \r\n    -- Mine\r\n    if e_turtleState == 0 then\r\n        turtle.dig();\r\n        \r\n        MoveForward(1);       \r\n  \r\n        turtle.digUp();\r\n        \r\n        if ki_xOffsetMax ~= 0 and ki_xOffsetMax <= i_xOffset then\r\n            ChangeTurtleState(1);\r\n        end\r\n    \r\n    -- Returning\r\n    elseif e_turtleState == 1 then\r\n    \r\n        -- Turn to face forwards\r\n        while e_turtleOrient ~= 2 do\r\n            TurnLeft();\r\n        end    \r\n        \r\n        MoveForward(-1);\r\n        \r\n        if i_xOffset <= 0 then                \r\n            print(\"Mining success\");\r\n            return;\r\n\r\n        end    \r\n        \r\n    -- Awaiting fuel\r\n    elseif e_turtleState == 2 then\r\n        turtle.select(ki_sFuel);\r\n        turtle.refuel(1);\r\n        \r\n        if turtle.getFuelLevel() ~= 0 then\r\n            ChangeTurtleStatePrevious();\r\n        end\r\n    end    \r\n\r\n    -- Log state\r\n    write(\"X offset: \")\r\n    write(tostring(i_xOffset));\r\n    write(\"/\");\r\n    write(tostring(ki_xOffsetMax));\r\n    \r\n    write(\"\\n\");\r\n\r\n    ------------------------------    \r\n    write(\"Turtle state: \");\r\n    write(tostring(e_turtleState));\r\n    \r\n    write(\"\\n\");\r\n    \r\n    -------------------------------\r\n    write(\"Turtle orien: \");\r\n    write(tostring(e_turtleOrient));\r\n    \r\n    write(\"\\n\");\r\n    \r\n    --------------------\r\n    sleep(0);\r\nend",
    "YaraRule": [
        "enable_org32",
        "core_keywords"
    ]
}